{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\OneDrive\\\\Desktop\\\\Facultate\\\\Master\\\\TIA\\\\ProiectSemestruTIA\\\\FE\\\\tiaproiect\\\\src\\\\pages\\\\Lakes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport \"../styles/Lakes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lakes = () => {\n  _s();\n  const [lakes, setLakes] = useState([]);\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const getUserDataFromToken = () => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return {\n        userId: decodedToken.userId,\n        username: decodedToken.username,\n        email: decodedToken.email\n      };\n    } catch (error) {\n      return null;\n    }\n  };\n  useEffect(() => {\n    const userData = getUserDataFromToken();\n    if (userData) {\n      setUser(userData);\n    }\n    const fetchLakes = async () => {\n      try {\n        const token = localStorage.getItem(\"jwtToken\");\n        const response = await fetch(\"http://localhost:8000/api/lakes\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch lakes data\");\n        }\n        const data = await response.json();\n        setLakes(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchLakes();\n  }, []);\n  const handleBookClick = async lakeId => {\n    if (!user) {\n      alert(\"Please log in or create an account to book a lake.\");\n      return;\n    }\n    const token = localStorage.getItem(\"jwtToken\");\n    if (!token) {\n      alert(\"You must be logged in to make a reservation.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/api/lakes/${lakeId}/reserve`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userId: user.userId\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to reserve the lake\");\n      }\n      alert(\"Lake reserved successfully!\");\n      navigate(`/lake/${lakeId}`);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-user-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please log in or create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"If you already have an account, you can \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 51\n        }, this), \". If you're new, please \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lakes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"lakes-header\",\n      children: \"Available Lakes for Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lakes-list\",\n      children: lakes.map(lake => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lake-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"lake-name\",\n          children: lake.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lake-location\",\n          children: [\"Location: \", lake.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reserve-button\",\n          onClick: () => handleBookClick(lake.id),\n          children: \"Book!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, lake.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Lakes, \"RbpjS6ONKljO0NMXyUBj5v3LPMs=\", false, function () {\n  return [useNavigate];\n});\n_c = Lakes;\nexport default Lakes;\nvar _c;\n$RefreshReg$(_c, \"Lakes\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Lakes","_s","lakes","setLakes","error","setError","user","setUser","navigate","getUserDataFromToken","token","localStorage","getItem","decodedToken","userId","username","email","userData","fetchLakes","response","fetch","headers","Authorization","ok","Error","data","json","message","handleBookClick","lakeId","alert","method","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","map","lake","name","location","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/marka/OneDrive/Desktop/Facultate/Master/TIA/ProiectSemestruTIA/FE/tiaproiect/src/pages/Lakes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport \"../styles/Lakes.css\";\r\n\r\nconst Lakes = () => {\r\n  const [lakes, setLakes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const getUserDataFromToken = () => {\r\n    const token = localStorage.getItem(\"jwtToken\");\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      return {\r\n        userId: decodedToken.userId,\r\n        username: decodedToken.username,\r\n        email: decodedToken.email,\r\n      };\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userData = getUserDataFromToken();\r\n    if (userData) {\r\n      setUser(userData);\r\n    }\r\n\r\n    const fetchLakes = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"jwtToken\");\r\n        const response = await fetch(\"http://localhost:8000/api/lakes\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch lakes data\");\r\n        }\r\n        const data = await response.json();\r\n        setLakes(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchLakes();\r\n  }, []);\r\n\r\n  const handleBookClick = async (lakeId) => {\r\n    if (!user) {\r\n      alert(\"Please log in or create an account to book a lake.\");\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"jwtToken\");\r\n\r\n    if (!token) {\r\n      alert(\"You must be logged in to make a reservation.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/lakes/${lakeId}/reserve`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({\r\n            userId: user.userId,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to reserve the lake\");\r\n      }\r\n\r\n      alert(\"Lake reserved successfully!\");\r\n      navigate(`/lake/${lakeId}`);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"no-user-container\">\r\n        <h2>Please log in or create an account</h2>\r\n        <p>\r\n          If you already have an account, you can <a href=\"/login\">log in</a>.\r\n          If you're new, please <a href=\"/signup\">create an account</a>.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"lakes-container\">\r\n      <h1 className=\"lakes-header\">Available Lakes for Booking</h1>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <div className=\"lakes-list\">\r\n        {lakes.map((lake) => (\r\n          <div className=\"lake-item\" key={lake.id}>\r\n            <h3 className=\"lake-name\">{lake.name}</h3>\r\n            <p className=\"lake-location\">Location: {lake.location}</p>\r\n            <button\r\n              className=\"reserve-button\"\r\n              onClick={() => handleBookClick(lake.id)}\r\n            >\r\n              Book!\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lakes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}