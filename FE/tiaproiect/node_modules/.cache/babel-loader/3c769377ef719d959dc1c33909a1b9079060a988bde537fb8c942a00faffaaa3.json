{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\OneDrive\\\\Desktop\\\\Facultate\\\\Master\\\\TIA\\\\ProiectSemestruTIA\\\\FE\\\\tiaproiect\\\\src\\\\pages\\\\LakeDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Use this hook for handling route params\nimport { DateRangePicker } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // Main CSS file\nimport \"react-date-range/dist/theme/default.css\"; // Theme CSS file\nimport \"../styles/LakeDetails.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LakeDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the lake ID from the URL using `useParams`\n  const [lake, setLake] = useState(null);\n  const [swims, setSwims] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedRange, setSelectedRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: \"selection\"\n  });\n  useEffect(() => {\n    const fetchLakeDetails = async () => {\n      try {\n        const lakeResponse = await fetch(`http://localhost:8000/api/lakes/${id}`);\n        const lakeData = await lakeResponse.json();\n        setLake(lakeData);\n        const swimsResponse = await fetch(`http://localhost:8000/api/lakes/${id}/swims`);\n        const swimsData = await swimsResponse.json();\n        setSwims(swimsData);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchLakeDetails();\n  }, [id]);\n  const handleReservation = swimId => {\n    console.log(`Reserving swim ${swimId} from`, selectedRange);\n    // Send reservation data to the backend API\n    fetch(`http://localhost:8000/api/swims/${swimId}/reserve`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        startDate: selectedRange.startDate,\n        endDate: selectedRange.endDate\n      })\n    }).then(response => {\n      if (!response.ok) throw new Error(\"Failed to reserve swim\");\n      alert(\"Reservation successful!\");\n    }).catch(error => alert(error.message));\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lake-details-container\",\n    children: lake ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lake-details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Lake: \", lake.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Location: \", lake.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Size: \", lake.size, \" Ha\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swim-list\",\n        children: swims && swims.length > 0 ? swims.map(swim => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swim-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Swim \", swim.swimNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n              ranges: [selectedRange],\n              onChange: ranges => setSelectedRange(ranges.selection),\n              moveRangeOnFirstSelection: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reserve-button\",\n            onClick: () => handleReservation(swim.id),\n            children: \"Reserve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)]\n        }, swim.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No swims available for this lake.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading lake details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(LakeDetails, \"Wdh8Oyl4+yCZj1gWPDlJW+U8YJ0=\", false, function () {\n  return [useParams];\n});\n_c = LakeDetails;\nexport default LakeDetails;\nvar _c;\n$RefreshReg$(_c, \"LakeDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","DateRangePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","LakeDetails","_s","id","lake","setLake","swims","setSwims","error","setError","selectedRange","setSelectedRange","startDate","Date","endDate","key","fetchLakeDetails","lakeResponse","fetch","lakeData","json","swimsResponse","swimsData","message","handleReservation","swimId","console","log","method","headers","body","JSON","stringify","then","response","ok","Error","alert","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","location","size","length","map","swim","swimNumber","ranges","onChange","selection","moveRangeOnFirstSelection","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marka/OneDrive/Desktop/Facultate/Master/TIA/ProiectSemestruTIA/FE/tiaproiect/src/pages/LakeDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"; // Use this hook for handling route params\r\nimport { DateRangePicker } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\"; // Main CSS file\r\nimport \"react-date-range/dist/theme/default.css\"; // Theme CSS file\r\nimport \"../styles/LakeDetails.css\";\r\n\r\nconst LakeDetails = () => {\r\n  const { id } = useParams(); // Get the lake ID from the URL using `useParams`\r\n  const [lake, setLake] = useState(null);\r\n  const [swims, setSwims] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedRange, setSelectedRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: \"selection\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchLakeDetails = async () => {\r\n      try {\r\n        const lakeResponse = await fetch(\r\n          `http://localhost:8000/api/lakes/${id}`\r\n        );\r\n        const lakeData = await lakeResponse.json();\r\n        setLake(lakeData);\r\n\r\n        const swimsResponse = await fetch(\r\n          `http://localhost:8000/api/lakes/${id}/swims`\r\n        );\r\n        const swimsData = await swimsResponse.json();\r\n        setSwims(swimsData);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchLakeDetails();\r\n  }, [id]);\r\n\r\n  const handleReservation = (swimId) => {\r\n    console.log(`Reserving swim ${swimId} from`, selectedRange);\r\n    // Send reservation data to the backend API\r\n    fetch(`http://localhost:8000/api/swims/${swimId}/reserve`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        startDate: selectedRange.startDate,\r\n        endDate: selectedRange.endDate,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(\"Failed to reserve swim\");\r\n        alert(\"Reservation successful!\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"lake-details-container\">\r\n      {lake ? (\r\n        <>\r\n          <div className=\"lake-details-header\">\r\n            <h1>Lake: {lake.name}</h1>\r\n            <h1>Location: {lake.location}</h1>\r\n            <h1>Size: {lake.size} Ha</h1>\r\n          </div>\r\n\r\n          <div className=\"swim-list\">\r\n            {swims && swims.length > 0 ? (\r\n              swims.map((swim) => (\r\n                <div className=\"swim-item\" key={swim.id}>\r\n                  <h3>Swim {swim.swimNumber}</h3>\r\n                  <div className=\"calendar-container\">\r\n                    <DateRangePicker\r\n                      ranges={[selectedRange]}\r\n                      onChange={(ranges) => setSelectedRange(ranges.selection)}\r\n                      moveRangeOnFirstSelection={false}\r\n                    />\r\n                  </div>\r\n                  <button\r\n                    className=\"reserve-button\"\r\n                    onClick={() => handleReservation(swim.id)}\r\n                  >\r\n                    Reserve\r\n                  </button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No swims available for this lake.</p>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading lake details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LakeDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}