{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\OneDrive\\\\Desktop\\\\Facultate\\\\Master\\\\TIA\\\\ProiectSemestruTIA\\\\FE\\\\tiaproiect\\\\src\\\\pages\\\\LakeDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../styles/LakeDetails.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LakeDetails = () => {\n  _s();\n  const {\n    lakeId\n  } = useParams(); // Get the lake ID from the URL\n  const [lakeDetails, setLakeDetails] = useState(null);\n  const [selectedSwim, setSelectedSwim] = useState(null);\n  const [calendarData, setCalendarData] = useState([]);\n  const navigate = useNavigate(); // For navigating after booking\n\n  useEffect(() => {\n    const fetchLakeDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/lakes/${lakeId}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch lake details\");\n        }\n        const data = await response.json();\n        setLakeDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching lake details:\", error);\n      }\n    };\n    fetchLakeDetails();\n  }, [lakeId]);\n\n  // This would be a mock of available dates for a swim\n  const handleSwimHover = async swimId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/swims/${swimId}/availability`);\n      const data = await response.json();\n      setCalendarData(data); // Assume the backend returns the available dates\n      setSelectedSwim(swimId);\n    } catch (error) {\n      console.error(\"Error fetching swim availability:\", error);\n    }\n  };\n  const handleReservation = async (startDate, endDate) => {\n    // Submit the reservation\n    try {\n      const response = await fetch(`http://localhost:8000/api/reservations`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          swimId: selectedSwim,\n          startDate,\n          endDate\n        })\n      });\n      if (response.ok) {\n        alert(\"Reservation successful!\");\n        navigate(\"/lakes\");\n      } else {\n        alert(\"Reservation failed.\");\n      }\n    } catch (error) {\n      console.error(\"Error making reservation:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lake-details-container\",\n    children: lakeDetails ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: lakeDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: lakeDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Swims Available for Reservation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swim-list\",\n        children: lakeDetails.swims.map(swim => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swim-item\",\n          onMouseEnter: () => handleSwimHover(swim.id),\n          onMouseLeave: () => setCalendarData([]) // Hide calendar on mouse leave\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: swim.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-container\",\n            children: calendarData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Available Dates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this), calendarData.map((date, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"calendar-date\",\n                onClick: () => handleReservation(date.startDate, date.endDate),\n                children: [date.startDate, \" - \", date.endDate]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, swim.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading lake details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(LakeDetails, \"/mQ76KdnTOdYM9H6OWTXkbmxSCE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = LakeDetails;\nexport default LakeDetails;\nvar _c;\n$RefreshReg$(_c, \"LakeDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LakeDetails","_s","lakeId","lakeDetails","setLakeDetails","selectedSwim","setSelectedSwim","calendarData","setCalendarData","navigate","fetchLakeDetails","response","fetch","ok","Error","data","json","error","console","handleSwimHover","swimId","handleReservation","startDate","endDate","method","headers","body","JSON","stringify","alert","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","swims","map","swim","onMouseEnter","id","onMouseLeave","length","date","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marka/OneDrive/Desktop/Facultate/Master/TIA/ProiectSemestruTIA/FE/tiaproiect/src/pages/LakeDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LakeDetails.css\";\r\n\r\nconst LakeDetails = () => {\r\n  const { lakeId } = useParams(); // Get the lake ID from the URL\r\n  const [lakeDetails, setLakeDetails] = useState(null);\r\n  const [selectedSwim, setSelectedSwim] = useState(null);\r\n  const [calendarData, setCalendarData] = useState([]);\r\n  const navigate = useNavigate(); // For navigating after booking\r\n\r\n  useEffect(() => {\r\n    const fetchLakeDetails = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8000/api/lakes/${lakeId}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch lake details\");\r\n        }\r\n        const data = await response.json();\r\n        setLakeDetails(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching lake details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLakeDetails();\r\n  }, [lakeId]);\r\n\r\n  // This would be a mock of available dates for a swim\r\n  const handleSwimHover = async (swimId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/swims/${swimId}/availability`\r\n      );\r\n      const data = await response.json();\r\n      setCalendarData(data); // Assume the backend returns the available dates\r\n      setSelectedSwim(swimId);\r\n    } catch (error) {\r\n      console.error(\"Error fetching swim availability:\", error);\r\n    }\r\n  };\r\n\r\n  const handleReservation = async (startDate, endDate) => {\r\n    // Submit the reservation\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/reservations`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          swimId: selectedSwim,\r\n          startDate,\r\n          endDate,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Reservation successful!\");\r\n        navigate(\"/lakes\");\r\n      } else {\r\n        alert(\"Reservation failed.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error making reservation:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"lake-details-container\">\r\n      {lakeDetails ? (\r\n        <>\r\n          <h1>{lakeDetails.name}</h1>\r\n          <p>{lakeDetails.description}</p>\r\n\r\n          <h2>Swims Available for Reservation:</h2>\r\n          <div className=\"swim-list\">\r\n            {lakeDetails.swims.map((swim) => (\r\n              <div\r\n                className=\"swim-item\"\r\n                key={swim.id}\r\n                onMouseEnter={() => handleSwimHover(swim.id)}\r\n                onMouseLeave={() => setCalendarData([])} // Hide calendar on mouse leave\r\n              >\r\n                <h3>{swim.name}</h3>\r\n                <div className=\"calendar-container\">\r\n                  {calendarData.length > 0 && (\r\n                    <div className=\"calendar\">\r\n                      <h4>Available Dates:</h4>\r\n                      {calendarData.map((date, index) => (\r\n                        <button\r\n                          key={index}\r\n                          className=\"calendar-date\"\r\n                          onClick={() =>\r\n                            handleReservation(date.startDate, date.endDate)\r\n                          }\r\n                        >\r\n                          {date.startDate} - {date.endDate}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading lake details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LakeDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCH,SAAS,CAAC,MAAM;IACd,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mCAAmCV,MAAM,EAC3C,CAAC;QACD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCZ,cAAc,CAACW,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMiB,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mCAAmCQ,MAAM,eAC3C,CAAC;MACD,MAAML,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,eAAe,CAACO,IAAI,CAAC,CAAC,CAAC;MACvBT,eAAe,CAACc,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,MAAMI,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;IACtD;IACA,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBR,MAAM,EAAEf,YAAY;UACpBiB,SAAS;UACTC;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAIZ,QAAQ,CAACE,EAAE,EAAE;QACfgB,KAAK,CAAC,yBAAyB,CAAC;QAChCpB,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLoB,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKiC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpC5B,WAAW,gBACVN,OAAA,CAAAE,SAAA;MAAAgC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAK5B,WAAW,CAAC6B;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BvC,OAAA;QAAAkC,QAAA,EAAI5B,WAAW,CAACkC;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhCvC,OAAA;QAAAkC,QAAA,EAAI;MAAgC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCvC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvB5B,WAAW,CAACmC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAC1B3C,OAAA;UACEiC,SAAS,EAAC,WAAW;UAErBW,YAAY,EAAEA,CAAA,KAAMtB,eAAe,CAACqB,IAAI,CAACE,EAAE,CAAE;UAC7CC,YAAY,EAAEA,CAAA,KAAMnC,eAAe,CAAC,EAAE,CAAE,CAAC;UAAA;UAAAuB,QAAA,gBAEzClC,OAAA;YAAAkC,QAAA,EAAKS,IAAI,CAACR;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBvC,OAAA;YAAKiC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAChCxB,YAAY,CAACqC,MAAM,GAAG,CAAC,iBACtB/C,OAAA;cAAKiC,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACvBlC,OAAA;gBAAAkC,QAAA,EAAI;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACxB7B,YAAY,CAACgC,GAAG,CAAC,CAACM,IAAI,EAAEC,KAAK,kBAC5BjD,OAAA;gBAEEiC,SAAS,EAAC,eAAe;gBACzBiB,OAAO,EAAEA,CAAA,KACP1B,iBAAiB,CAACwB,IAAI,CAACvB,SAAS,EAAEuB,IAAI,CAACtB,OAAO,CAC/C;gBAAAQ,QAAA,GAEAc,IAAI,CAACvB,SAAS,EAAC,KAAG,EAACuB,IAAI,CAACtB,OAAO;cAAA,GAN3BuB,KAAK;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOJ,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GAtBDI,IAAI,CAACE,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBT,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CAAC,gBAEHvC,OAAA;MAAAkC,QAAA,EAAG;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CA9GID,WAAW;EAAA,QACIN,SAAS,EAIXC,WAAW;AAAA;AAAAqD,EAAA,GALxBhD,WAAW;AAgHjB,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}